name: Run tests

on: 
  workflow_dispatch:

jobs:
  run-http-tests:
    runs-on: ubuntu-latest
    name: run http tests
    env:
        ASTRA_DB_APPLICATION_TOKEN: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        base_url: ${{ secrets.BASE_URL }}
        COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PERPLEXITYAI_API_KEY: ${{ secrets.PERPLEXITYAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.11.8
        uses: actions/setup-python@v2
        with:
           python-version: '3.11.8'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Check Poetry Version
        run: poetry --version
      - name: Configure Poetry to Use Python 3.11.8
        run: poetry env use python3.10
      - name: get dependencies
        run: |
          poetry install
      - name: run tests
        run: |
          poetry run pytest -s --disable-warnings tests/http/
  run-async-http-tests:
    runs-on: ubuntu-latest
    name: run async http tests
    env:
        ASTRA_DB_APPLICATION_TOKEN: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        base_url: ${{ secrets.BASE_URL }}
        COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PERPLEXITYAI_API_KEY: ${{ secrets.PERPLEXITYAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.11.8
        uses: actions/setup-python@v2
        with:
           python-version: '3.11.8'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Check Poetry Version
        run: poetry --version
      - name: Configure Poetry to Use Python 3.11.8
        run: poetry env use python3.10
      - name: get dependencies
        run: |
          poetry install
      - name: run tests
        run: |
          poetry run pytest -s --disable-warnings tests/async_http/
  run-openai-sdk-tests:
    runs-on: ubuntu-latest
    name: run openai-sdk tests
    env:
        ASTRA_DB_APPLICATION_TOKEN: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        base_url: ${{ secrets.BASE_URL }}
        COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PERPLEXITYAI_API_KEY: ${{ secrets.PERPLEXITYAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.11.8
        uses: actions/setup-python@v2
        with:
           python-version: '3.11.8'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Check Poetry Version
        run: poetry --version
      - name: Configure Poetry to Use Python 3.11.8
        run: poetry env use python3.10
      - name: get dependencies
        run: |
          poetry install
      - name: run tests
        run: |
          poetry run pytest -s --disable-warnings tests/openai-sdk/

  run-streaming-assistants-tests-chat:
    runs-on: ubuntu-latest
    name: run streaming-assistants chat tests
    env:
        ASTRA_DB_APPLICATION_TOKEN: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        base_url: ${{ secrets.BASE_URL }}
        COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PERPLEXITYAI_API_KEY: ${{ secrets.PERPLEXITYAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.11.8
        uses: actions/setup-python@v2
        with:
           python-version: '3.11.8'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Check Poetry Version
        run: poetry --version
      - name: Configure Poetry to Use Python 3.11.8
        run: poetry env use python3.10
      - name: get dependencies
        run: |
          poetry install
      - name: run tests
        run: |
          poetry run pytest -s --disable-warnings tests/streaming-assistants/test_chat_completion.py

  run-streaming-assistants-tests-embedding:
    runs-on: ubuntu-latest
    name: run streaming-assistants embedding tests
    env:
        ASTRA_DB_APPLICATION_TOKEN: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        base_url: ${{ secrets.BASE_URL }}
        COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PERPLEXITYAI_API_KEY: ${{ secrets.PERPLEXITYAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.11.8
        uses: actions/setup-python@v2
        with:
           python-version: '3.11.8'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Check Poetry Version
        run: poetry --version
      - name: Configure Poetry to Use Python 3.11.8
        run: poetry env use python3.10
      - name: get dependencies
        run: |
          poetry install
      - name: run tests
        run: |
          poetry run pytest -s --disable-warnings tests/streaming-assistants/test_embedding.py
  run-streaming-assistants-tests-file-embedding:
    runs-on: ubuntu-latest
    name: run streaming-assistants file embedding tests
    env:
        ASTRA_DB_APPLICATION_TOKEN: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        base_url: ${{ secrets.BASE_URL }}
        COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PERPLEXITYAI_API_KEY: ${{ secrets.PERPLEXITYAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.11.8
        uses: actions/setup-python@v2
        with:
           python-version: '3.11.8'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Check Poetry Version
        run: poetry --version
      - name: Configure Poetry to Use Python 3.11.8
        run: poetry env use python3.10
      - name: get dependencies
        run: |
          poetry install
      - name: run tests
        run: |
          poetry run pytest -s --disable-warnings tests/streaming-assistants/test_file_embedding.py
  run-streaming-assistants-tests-function-calling:
    runs-on: ubuntu-latest
    name: run streaming-assistants function calling tests
    env:
        ASTRA_DB_APPLICATION_TOKEN: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        base_url: ${{ secrets.BASE_URL }}
        COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PERPLEXITYAI_API_KEY: ${{ secrets.PERPLEXITYAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.11.8
        uses: actions/setup-python@v2
        with:
           python-version: '3.11.8'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Check Poetry Version
        run: poetry --version
      - name: Configure Poetry to Use Python 3.11.8
        run: poetry env use python3.10
      - name: get dependencies
        run: |
          poetry install
      - name: run tests
        run: |
          poetry run pytest -s --disable-warnings tests/streaming-assistants/test_function_calling.py
  run-streaming-assistants-tests-run:
    runs-on: ubuntu-latest
    name: run streaming-assistants run tests
    env:
        ASTRA_DB_APPLICATION_TOKEN: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        base_url: ${{ secrets.BASE_URL }}
        COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PERPLEXITYAI_API_KEY: ${{ secrets.PERPLEXITYAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.11.8
        uses: actions/setup-python@v2
        with:
           python-version: '3.11.8'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Check Poetry Version
        run: poetry --version
      - name: Configure Poetry to Use Python 3.11.8
        run: poetry env use python3.10
      - name: get dependencies
        run: |
          poetry install
      - name: run tests
        run: |
          poetry run pytest -s --disable-warnings tests/streaming-assistants/test_run.py
  run-streaming-assistants-tests-run-retrieval:
    runs-on: ubuntu-latest
    name: run streaming-assistants run retrieval tests
    env:
        ASTRA_DB_APPLICATION_TOKEN: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        base_url: ${{ secrets.BASE_URL }}
        COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PERPLEXITYAI_API_KEY: ${{ secrets.PERPLEXITYAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.11.8
        uses: actions/setup-python@v2
        with:
           python-version: '3.11.8'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Check Poetry Version
        run: poetry --version
      - name: Configure Poetry to Use Python 3.11.8
        run: poetry env use python3.10
      - name: get dependencies
        run: |
          poetry install
      - name: run tests
        run: |
          poetry run pytest -s --disable-warnings tests/streaming-assistants/test_run_retreival.py
  run-streaming-assistants-tests-streaming-run-retrieval:
    runs-on: ubuntu-latest
    name: run streaming-assistants streaming run retrieval tests
    env:
        ASTRA_DB_APPLICATION_TOKEN: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        base_url: ${{ secrets.BASE_URL }}
        COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PERPLEXITYAI_API_KEY: ${{ secrets.PERPLEXITYAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.11.8
        uses: actions/setup-python@v2
        with:
           python-version: '3.11.8'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Check Poetry Version
        run: poetry --version
      - name: Configure Poetry to Use Python 3.11.8
        run: poetry env use python3.10
      - name: get dependencies
        run: |
          poetry install
      - name: run tests
        run: |
          poetry run pytest -s --disable-warnings tests/streaming-assistants/test_streaming_run_retrieval.py
  run-streaming-assistants-tests-streaming-run:
    runs-on: ubuntu-latest
    name: run streaming-assistants streaming run tests
    env:
        ASTRA_DB_APPLICATION_TOKEN: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        base_url: ${{ secrets.BASE_URL }}
        COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PERPLEXITYAI_API_KEY: ${{ secrets.PERPLEXITYAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.11.8
        uses: actions/setup-python@v2
        with:
           python-version: '3.11.8'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Check Poetry Version
        run: poetry --version
      - name: Configure Poetry to Use Python 3.11.8
        run: poetry env use python3.10
      - name: get dependencies
        run: |
          poetry install
      - name: run tests
        run: |
          poetry run pytest -s --disable-warnings tests/streaming-assistants/test_streaming_run.py
  run-streaming-assistants-tests-streaming-run-function-calling:
    runs-on: ubuntu-latest
    name: run streaming-assistants streaming run function calling tests
    env:
        ASTRA_DB_APPLICATION_TOKEN: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        base_url: ${{ secrets.BASE_URL }}
        COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PERPLEXITYAI_API_KEY: ${{ secrets.PERPLEXITYAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.11.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.8'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Check Poetry Version
        run: poetry --version
      - name: Configure Poetry to Use Python 3.11.8
        run: poetry env use python3.10
      - name: get dependencies
        run: |
          poetry install
      - name: run tests
        run: |
          poetry run pytest -s --disable-warnings tests/streaming-assistants/test_streaming_run_function_calling.py
  run-streaming-assistants-tests-threads:
    runs-on: ubuntu-latest
    name: run streaming-assistants threads tests
    env:
      ASTRA_DB_APPLICATION_TOKEN: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      base_url: ${{ secrets.BASE_URL }}
      COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      PERPLEXITYAI_API_KEY: ${{ secrets.PERPLEXITYAI_API_KEY }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}


    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.11.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.8'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Check Poetry Version
        run: poetry --version
      - name: Configure Poetry to Use Python 3.11.8
        run: poetry env use python3.10
      - name: get dependencies
        run: |
          poetry install
      - name: run tests
        run: |
          poetry run pytest -s --disable-warnings tests/streaming-assistants/test_threads.py
  run-streaming-assistants-tests-auto-tool-call:
    runs-on: ubuntu-latest
    name: run streaming-assistants test auto tool_call
    env:
      ASTRA_DB_APPLICATION_TOKEN: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_REGION_NAME: ${{ secrets.AWS_REGION_NAME }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      base_url: ${{ secrets.BASE_URL }}
      COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      PERPLEXITYAI_API_KEY: ${{ secrets.PERPLEXITYAI_API_KEY }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}


    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.11.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.8'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Check Poetry Version
        run: poetry --version
      - name: Configure Poetry to Use Python 3.11.8
        run: poetry env use python3.10
      - name: get dependencies
        run: |
          poetry install
      - name: run tests
        run: |
          poetry run pytest -s --disable-warnings tests/streaming-assistants/test_auto_tool_call.py
