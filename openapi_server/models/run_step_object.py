# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.run_step_completion_usage import RunStepCompletionUsage
from openapi_server.models.run_step_object_last_error import RunStepObjectLastError
from openapi_server.models.run_step_object_step_details import RunStepObjectStepDetails


class RunStepObject(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    RunStepObject - a model defined in OpenAPI

        id: The id of this RunStepObject.
        object: The object of this RunStepObject.
        created_at: The created_at of this RunStepObject.
        assistant_id: The assistant_id of this RunStepObject.
        thread_id: The thread_id of this RunStepObject.
        run_id: The run_id of this RunStepObject.
        type: The type of this RunStepObject.
        status: The status of this RunStepObject.
        step_details: The step_details of this RunStepObject.
        last_error: The last_error of this RunStepObject.
        expired_at: The expired_at of this RunStepObject.
        cancelled_at: The cancelled_at of this RunStepObject.
        failed_at: The failed_at of this RunStepObject.
        completed_at: The completed_at of this RunStepObject.
        metadata: The metadata of this RunStepObject.
        usage: The usage of this RunStepObject.
    """

    id: str = Field(alias="id")
    object: str = Field(alias="object")
    created_at: int = Field(alias="created_at")
    assistant_id: str = Field(alias="assistant_id")
    thread_id: str = Field(alias="thread_id")
    run_id: str = Field(alias="run_id")
    type: str = Field(alias="type")
    status: str = Field(alias="status")
    step_details: RunStepObjectStepDetails = Field(alias="step_details")
    last_error: RunStepObjectLastError = Field(alias="last_error")
    expired_at: int = Field(alias="expired_at")
    cancelled_at: int = Field(alias="cancelled_at")
    failed_at: int = Field(alias="failed_at")
    completed_at: int = Field(alias="completed_at")
    metadata: Dict[str, Any] = Field(alias="metadata")
    usage: RunStepCompletionUsage = Field(alias="usage")

RunStepObject.update_forward_refs()
