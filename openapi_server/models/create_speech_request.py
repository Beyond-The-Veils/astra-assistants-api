# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.create_speech_request_model import CreateSpeechRequestModel


class CreateSpeechRequest(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    CreateSpeechRequest - a model defined in OpenAPI

        model: The model of this CreateSpeechRequest.
        input: The input of this CreateSpeechRequest.
        voice: The voice of this CreateSpeechRequest.
        response_format: The response_format of this CreateSpeechRequest [Optional].
        speed: The speed of this CreateSpeechRequest [Optional].
    """

    model: CreateSpeechRequestModel = Field(alias="model")
    input: str = Field(alias="input")
    voice: str = Field(alias="voice")
    response_format: Optional[str] = Field(alias="response_format", default=None)
    speed: Optional[float] = Field(alias="speed", default=None)

    @validator("input")
    def input_max_length(cls, value):
        assert len(value) <= 4096
        return value

    @validator("speed")
    def speed_max(cls, value):
        assert value <= 4.0
        return value

    @validator("speed")
    def speed_min(cls, value):
        assert value >= 0.25
        return value

CreateSpeechRequest.update_forward_refs()
