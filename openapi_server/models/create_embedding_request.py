# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional, Union  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401


class CreateEmbeddingRequest(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    CreateEmbeddingRequest - a model defined in OpenAPI

        input: The input of this CreateEmbeddingRequest.
        model: The model of this CreateEmbeddingRequest.
        encoding_format: The encoding_format of this CreateEmbeddingRequest [Optional].
        dimensions: The dimensions of this CreateEmbeddingRequest [Optional].
        user: The user of this CreateEmbeddingRequest [Optional].
    """

    input: Union[str, List[str], List[int], List[List[int]]] = Field(alias="input")
    model: str = Field(alias="model")
    encoding_format: Optional[str] = Field(alias="encoding_format", default=None)
    dimensions: Optional[int] = Field(alias="dimensions", default=None)
    user: Optional[str] = Field(alias="user", default=None)

    @validator("dimensions")
    def dimensions_min(cls, value):
        assert value >= 1
        return value

CreateEmbeddingRequest.update_forward_refs()
