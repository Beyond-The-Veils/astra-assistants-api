# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.fine_tuning_job_error import FineTuningJobError
from openapi_server.models.fine_tuning_job_hyperparameters import FineTuningJobHyperparameters


class FineTuningJob(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    FineTuningJob - a model defined in OpenAPI

        id: The id of this FineTuningJob.
        created_at: The created_at of this FineTuningJob.
        error: The error of this FineTuningJob.
        fine_tuned_model: The fine_tuned_model of this FineTuningJob.
        finished_at: The finished_at of this FineTuningJob.
        hyperparameters: The hyperparameters of this FineTuningJob.
        model: The model of this FineTuningJob.
        object: The object of this FineTuningJob.
        organization_id: The organization_id of this FineTuningJob.
        result_files: The result_files of this FineTuningJob.
        status: The status of this FineTuningJob.
        trained_tokens: The trained_tokens of this FineTuningJob.
        training_file: The training_file of this FineTuningJob.
        validation_file: The validation_file of this FineTuningJob.
    """

    id: str = Field(alias="id")
    created_at: int = Field(alias="created_at")
    error: FineTuningJobError = Field(alias="error")
    fine_tuned_model: str = Field(alias="fine_tuned_model")
    finished_at: int = Field(alias="finished_at")
    hyperparameters: FineTuningJobHyperparameters = Field(alias="hyperparameters")
    model: str = Field(alias="model")
    object: str = Field(alias="object")
    organization_id: str = Field(alias="organization_id")
    result_files: List[str] = Field(alias="result_files")
    status: str = Field(alias="status")
    trained_tokens: int = Field(alias="trained_tokens")
    training_file: str = Field(alias="training_file")
    validation_file: str = Field(alias="validation_file")

FineTuningJob.update_forward_refs()
