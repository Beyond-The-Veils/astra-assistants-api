# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.message_object_content_inner import MessageObjectContentInner


class MessageObject(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    MessageObject - a model defined in OpenAPI

        id: The id of this MessageObject.
        object: The object of this MessageObject.
        created_at: The created_at of this MessageObject.
        thread_id: The thread_id of this MessageObject.
        role: The role of this MessageObject.
        content: The content of this MessageObject.
        assistant_id: The assistant_id of this MessageObject.
        run_id: The run_id of this MessageObject.
        file_ids: The file_ids of this MessageObject.
        metadata: The metadata of this MessageObject.
    """

    id: str = Field(alias="id")
    object: str = Field(alias="object")
    created_at: int = Field(alias="created_at")
    thread_id: str = Field(alias="thread_id")
    role: str = Field(alias="role")
    content: List[MessageObjectContentInner] = Field(alias="content")
    assistant_id: str = Field(alias="assistant_id")
    run_id: str = Field(alias="run_id")
    file_ids: List[str] = Field(alias="file_ids")
    metadata: Dict[str, Any] = Field(alias="metadata")

MessageObject.update_forward_refs()
