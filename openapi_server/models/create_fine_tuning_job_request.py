# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.create_fine_tuning_job_request_hyperparameters import CreateFineTuningJobRequestHyperparameters
from openapi_server.models.create_fine_tuning_job_request_model import CreateFineTuningJobRequestModel


class CreateFineTuningJobRequest(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    CreateFineTuningJobRequest - a model defined in OpenAPI

        model: The model of this CreateFineTuningJobRequest.
        training_file: The training_file of this CreateFineTuningJobRequest.
        hyperparameters: The hyperparameters of this CreateFineTuningJobRequest [Optional].
        suffix: The suffix of this CreateFineTuningJobRequest [Optional].
        validation_file: The validation_file of this CreateFineTuningJobRequest [Optional].
    """

    model: CreateFineTuningJobRequestModel = Field(alias="model")
    training_file: str = Field(alias="training_file")
    hyperparameters: Optional[CreateFineTuningJobRequestHyperparameters] = Field(alias="hyperparameters", default=None)
    suffix: Optional[str] = Field(alias="suffix", default=None)
    validation_file: Optional[str] = Field(alias="validation_file", default=None)

    @validator("suffix")
    def suffix_min_length(cls, value):
        assert len(value) >= 1
        return value

    @validator("suffix")
    def suffix_max_length(cls, value):
        assert len(value) <= 40
        return value

CreateFineTuningJobRequest.update_forward_refs()
