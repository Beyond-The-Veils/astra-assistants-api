# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.create_edit_request_model import CreateEditRequestModel


class CreateEditRequest(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    CreateEditRequest - a model defined in OpenAPI

        instruction: The instruction of this CreateEditRequest.
        model: The model of this CreateEditRequest.
        input: The input of this CreateEditRequest [Optional].
        n: The n of this CreateEditRequest [Optional].
        temperature: The temperature of this CreateEditRequest [Optional].
        top_p: The top_p of this CreateEditRequest [Optional].
    """

    instruction: str = Field(alias="instruction")
    model: CreateEditRequestModel = Field(alias="model")
    input: Optional[str] = Field(alias="input", default=None)
    n: Optional[int] = Field(alias="n", default=None)
    temperature: Optional[float] = Field(alias="temperature", default=None)
    top_p: Optional[float] = Field(alias="top_p", default=None)

    @validator("n")
    def n_max(cls, value):
        assert value <= 20
        return value

    @validator("n")
    def n_min(cls, value):
        assert value >= 1
        return value

    @validator("temperature")
    def temperature_max(cls, value):
        assert value <= 2
        return value

    @validator("temperature")
    def temperature_min(cls, value):
        assert value >= 0
        return value

    @validator("top_p")
    def top_p_max(cls, value):
        assert value <= 1
        return value

    @validator("top_p")
    def top_p_min(cls, value):
        assert value >= 0
        return value

CreateEditRequest.update_forward_refs()
